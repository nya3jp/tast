// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/software/audio_config.proto

package software

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Note that all files should be specified as paths relative to the root of a
// chromiumos checkout, e.g. "src/overlays/overlay-<target>/audio/HiFi.conf".
type AudioConfig struct {
	// The name of the audio card.
	CardName string `protobuf:"bytes,1,opt,name=card_name,json=cardName,proto3" json:"card_name,omitempty"`
	// Path to the CRAS card configuration file.
	// See
	// https://chromium.googlesource.com/chromiumos/third_party/adhd/+/master/cras/#card-configuration.
	CardConfigFile string `protobuf:"bytes,2,opt,name=card_config_file,json=cardConfigFile,proto3" json:"card_config_file,omitempty"`
	// Path to the dsp.ini configuration file.
	DspFile string `protobuf:"bytes,3,opt,name=dsp_file,json=dspFile,proto3" json:"dsp_file,omitempty"`
	// Path to the UCM file. Note that this is the UCM verb file (e.g.
	// "HiFi.conf"), NOT the UCM master file (e.g. <sound card name>.conf).
	UcmFile string `protobuf:"bytes,4,opt,name=ucm_file,json=ucmFile,proto3" json:"ucm_file,omitempty"`
	// Path to the UCM master file (e.g. <sound card name>.conf).
	UcmMasterFile        string   `protobuf:"bytes,5,opt,name=ucm_master_file,json=ucmMasterFile,proto3" json:"ucm_master_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AudioConfig) Reset()         { *m = AudioConfig{} }
func (m *AudioConfig) String() string { return proto.CompactTextString(m) }
func (*AudioConfig) ProtoMessage()    {}
func (*AudioConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_45b09d347f71d372, []int{0}
}

func (m *AudioConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AudioConfig.Unmarshal(m, b)
}
func (m *AudioConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AudioConfig.Marshal(b, m, deterministic)
}
func (m *AudioConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudioConfig.Merge(m, src)
}
func (m *AudioConfig) XXX_Size() int {
	return xxx_messageInfo_AudioConfig.Size(m)
}
func (m *AudioConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AudioConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AudioConfig proto.InternalMessageInfo

func (m *AudioConfig) GetCardName() string {
	if m != nil {
		return m.CardName
	}
	return ""
}

func (m *AudioConfig) GetCardConfigFile() string {
	if m != nil {
		return m.CardConfigFile
	}
	return ""
}

func (m *AudioConfig) GetDspFile() string {
	if m != nil {
		return m.DspFile
	}
	return ""
}

func (m *AudioConfig) GetUcmFile() string {
	if m != nil {
		return m.UcmFile
	}
	return ""
}

func (m *AudioConfig) GetUcmMasterFile() string {
	if m != nil {
		return m.UcmMasterFile
	}
	return ""
}

func init() {
	proto.RegisterType((*AudioConfig)(nil), "chromiumos.config.api.software.AudioConfig")
}

func init() { proto.RegisterFile("api/software/audio_config.proto", fileDescriptor_45b09d347f71d372) }

var fileDescriptor_45b09d347f71d372 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcb, 0x4a, 0x04, 0x31,
	0x10, 0x45, 0x69, 0x9f, 0x33, 0x11, 0x1f, 0x64, 0x35, 0x22, 0xa8, 0xb8, 0x90, 0x59, 0x25, 0xc8,
	0x7c, 0x81, 0x0a, 0xee, 0x74, 0xe1, 0xd2, 0x4d, 0x53, 0x26, 0xe9, 0x18, 0x98, 0xea, 0x0a, 0x49,
	0x07, 0xff, 0xcb, 0x2f, 0x94, 0x54, 0x6c, 0x9c, 0xed, 0x3d, 0xa7, 0x8a, 0xaa, 0x2b, 0x6e, 0x20,
	0x06, 0x9d, 0x69, 0x98, 0xbe, 0x21, 0x39, 0x0d, 0xc5, 0x06, 0xea, 0x0d, 0x8d, 0x43, 0xf0, 0x2a,
	0x26, 0x9a, 0x48, 0x5e, 0x9b, 0xaf, 0x44, 0x18, 0x0a, 0x52, 0x56, 0x7f, 0x00, 0x62, 0x50, 0xf3,
	0xc8, 0xdd, 0x4f, 0x27, 0x4e, 0x1e, 0xeb, 0xd8, 0x33, 0x43, 0x79, 0x25, 0x96, 0x06, 0x92, 0xed,
	0x47, 0x40, 0xb7, 0xea, 0x6e, 0xbb, 0xf5, 0xf2, 0x7d, 0x51, 0x83, 0x37, 0x40, 0x27, 0xd7, 0xe2,
	0x82, 0x61, 0x5b, 0xd4, 0x0f, 0x61, 0xeb, 0x56, 0x7b, 0xec, 0x9c, 0xd5, 0xbc, 0xad, 0x78, 0x09,
	0x5b, 0x27, 0x2f, 0xc5, 0xc2, 0xe6, 0xd8, 0x8c, 0x7d, 0x36, 0x8e, 0x6d, 0x8e, 0x33, 0x2a, 0x06,
	0x1b, 0x3a, 0x68, 0xa8, 0x18, 0x64, 0x74, 0x2f, 0xce, 0x2b, 0x42, 0xc8, 0x93, 0x4b, 0xcd, 0x38,
	0x64, 0xe3, 0xb4, 0x18, 0x7c, 0xe5, 0xb4, 0x7a, 0x4f, 0x9b, 0x8f, 0x07, 0x4f, 0x6a, 0xfe, 0x4c,
	0x51, 0xf2, 0xfa, 0xff, 0x4d, 0xdd, 0xae, 0xd3, 0x9e, 0xf4, 0x6e, 0x39, 0x9f, 0x47, 0x5c, 0xc8,
	0xe6, 0x37, 0x00, 0x00, 0xff, 0xff, 0x50, 0xe4, 0xfa, 0x79, 0x33, 0x01, 0x00, 0x00,
}
