// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/software/brand_config.proto

package software

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	api "go.chromium.org/chromiumos/config/go/api"
	chromeos_config "go.chromium.org/chromiumos/config/go/api/software/chromeos_config"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Contains all of the device-brand-specific configuration that can be
// updated via new software builds/releases.
//
// During manufacturing, the DeviceBrandId will be set for a given device,
// which will subsequently determine what BrandConfig shall be selected from
// the current software-build installed on the device.
type BrandConfig struct {
	BrandId              *api.DeviceBrandId                          `protobuf:"bytes,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	ScanConfig           *chromeos_config.IdentityScanConfig_BrandId `protobuf:"bytes,2,opt,name=scan_config,json=scanConfig,proto3" json:"scan_config,omitempty"`
	Wallpaper            string                                      `protobuf:"bytes,3,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *BrandConfig) Reset()         { *m = BrandConfig{} }
func (m *BrandConfig) String() string { return proto.CompactTextString(m) }
func (*BrandConfig) ProtoMessage()    {}
func (*BrandConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_0813e9df0e3faaf5, []int{0}
}

func (m *BrandConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrandConfig.Unmarshal(m, b)
}
func (m *BrandConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrandConfig.Marshal(b, m, deterministic)
}
func (m *BrandConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrandConfig.Merge(m, src)
}
func (m *BrandConfig) XXX_Size() int {
	return xxx_messageInfo_BrandConfig.Size(m)
}
func (m *BrandConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BrandConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BrandConfig proto.InternalMessageInfo

func (m *BrandConfig) GetBrandId() *api.DeviceBrandId {
	if m != nil {
		return m.BrandId
	}
	return nil
}

func (m *BrandConfig) GetScanConfig() *chromeos_config.IdentityScanConfig_BrandId {
	if m != nil {
		return m.ScanConfig
	}
	return nil
}

func (m *BrandConfig) GetWallpaper() string {
	if m != nil {
		return m.Wallpaper
	}
	return ""
}

func init() {
	proto.RegisterType((*BrandConfig)(nil), "chromiumos.config.api.software.BrandConfig")
}

func init() { proto.RegisterFile("api/software/brand_config.proto", fileDescriptor_0813e9df0e3faaf5) }

var fileDescriptor_0813e9df0e3faaf5 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x15, 0x90, 0x80, 0x3a, 0x5b, 0xa6, 0x50, 0x21, 0xa8, 0x10, 0x43, 0xa7, 0xb3, 0xa0,
	0x03, 0x23, 0x52, 0x61, 0x29, 0x63, 0xd9, 0x58, 0xa2, 0x8b, 0xed, 0x86, 0x13, 0xad, 0xcf, 0xb2,
	0x03, 0x15, 0x1f, 0x95, 0x6f, 0x83, 0xea, 0x38, 0xfd, 0x83, 0x10, 0x5b, 0x74, 0xd1, 0xfb, 0xbd,
	0x9f, 0x9f, 0xb8, 0x42, 0x47, 0x32, 0xf0, 0xa2, 0x5d, 0xa3, 0x37, 0xb2, 0xf6, 0x68, 0x75, 0xa5,
	0xd8, 0x2e, 0xa8, 0x01, 0xe7, 0xb9, 0xe5, 0xe2, 0x52, 0xbd, 0x79, 0x5e, 0xd1, 0xc7, 0x8a, 0x03,
	0xa4, 0x1f, 0xe8, 0x08, 0xfa, 0xc8, 0xf0, 0x7c, 0x03, 0xd0, 0xe6, 0x93, 0x94, 0xa9, 0xba, 0x38,
	0xe9, 0x2e, 0x3a, 0xbc, 0x3f, 0x60, 0x47, 0x8e, 0xe1, 0x90, 0xf0, 0x92, 0xb4, 0xb1, 0x2d, 0xb5,
	0x5f, 0x55, 0x50, 0x68, 0x0f, 0x3a, 0xaf, 0xbf, 0x33, 0x91, 0x4f, 0x37, 0xac, 0xc7, 0x78, 0x2d,
	0x1e, 0xc4, 0x59, 0x8f, 0x2e, 0xb3, 0x51, 0x36, 0xce, 0xef, 0x6e, 0xe0, 0x6f, 0xad, 0xa7, 0x28,
	0x12, 0xb3, 0x33, 0x3d, 0x3f, 0xad, 0xbb, 0x8f, 0xe2, 0x5d, 0xe4, 0x7b, 0x2d, 0xe5, 0x51, 0x64,
	0x3c, 0xc3, 0xff, 0x4f, 0x83, 0x5f, 0xc6, 0x30, 0x4b, 0xc6, 0x2f, 0x0a, 0x6d, 0x67, 0x06, 0x7d,
	0x93, 0x08, 0xdb, 0x5b, 0x71, 0x21, 0x06, 0x6b, 0x5c, 0x2e, 0x1d, 0x3a, 0xe3, 0xcb, 0xe3, 0x51,
	0x36, 0x1e, 0xcc, 0x77, 0x87, 0xe9, 0xe4, 0xf5, 0xb6, 0xe1, 0x6d, 0x33, 0xb0, 0x6f, 0xe4, 0x4e,
	0x43, 0xa6, 0x6d, 0x1a, 0x96, 0xfb, 0xdb, 0xd5, 0x27, 0x71, 0x97, 0xc9, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x5a, 0xac, 0xc8, 0x10, 0xae, 0x01, 0x00, 0x00,
}
