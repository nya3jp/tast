// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testing.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// EntityType represents a type of an entity.
type EntityType int32

const (
	EntityType_TEST    EntityType = 0
	EntityType_FIXTURE EntityType = 1
)

var EntityType_name = map[int32]string{
	0: "TEST",
	1: "FIXTURE",
}

var EntityType_value = map[string]int32{
	"TEST":    0,
	"FIXTURE": 1,
}

func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}

func (EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{0}
}

// DownloadMode specifies a strategy to download external data files.
type DownloadMode int32

const (
	// BATCH specifies that test bundles should download external data files
	// in batch before running tests.
	DownloadMode_BATCH DownloadMode = 0
	// LAZY specifies that test bundles should download external data files
	// as needed between tests.
	DownloadMode_LAZY DownloadMode = 1
)

var DownloadMode_name = map[int32]string{
	0: "BATCH",
	1: "LAZY",
}

var DownloadMode_value = map[string]int32{
	"BATCH": 0,
	"LAZY":  1,
}

func (x DownloadMode) String() string {
	return proto.EnumName(DownloadMode_name, int32(x))
}

func (DownloadMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{1}
}

type ListEntitiesRequest struct {
	Features             *Features `protobuf:"bytes,1,opt,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListEntitiesRequest) Reset()         { *m = ListEntitiesRequest{} }
func (m *ListEntitiesRequest) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesRequest) ProtoMessage()    {}
func (*ListEntitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{0}
}

func (m *ListEntitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesRequest.Unmarshal(m, b)
}
func (m *ListEntitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesRequest.Marshal(b, m, deterministic)
}
func (m *ListEntitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesRequest.Merge(m, src)
}
func (m *ListEntitiesRequest) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesRequest.Size(m)
}
func (m *ListEntitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesRequest proto.InternalMessageInfo

func (m *ListEntitiesRequest) GetFeatures() *Features {
	if m != nil {
		return m.Features
	}
	return nil
}

type ListEntitiesResponse struct {
	// Entities is a list of entities available on the server. The order of
	// entities is unspecified.
	Entities             []*ResolvedEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListEntitiesResponse) Reset()         { *m = ListEntitiesResponse{} }
func (m *ListEntitiesResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesResponse) ProtoMessage()    {}
func (*ListEntitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{1}
}

func (m *ListEntitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesResponse.Unmarshal(m, b)
}
func (m *ListEntitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesResponse.Merge(m, src)
}
func (m *ListEntitiesResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesResponse.Size(m)
}
func (m *ListEntitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesResponse proto.InternalMessageInfo

func (m *ListEntitiesResponse) GetEntities() []*ResolvedEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type RunTestsRequest struct {
	// Types that are valid to be assigned to Type:
	//	*RunTestsRequest_RunTestsInit
	Type                 isRunTestsRequest_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RunTestsRequest) Reset()         { *m = RunTestsRequest{} }
func (m *RunTestsRequest) String() string { return proto.CompactTextString(m) }
func (*RunTestsRequest) ProtoMessage()    {}
func (*RunTestsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{2}
}

func (m *RunTestsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTestsRequest.Unmarshal(m, b)
}
func (m *RunTestsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTestsRequest.Marshal(b, m, deterministic)
}
func (m *RunTestsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTestsRequest.Merge(m, src)
}
func (m *RunTestsRequest) XXX_Size() int {
	return xxx_messageInfo_RunTestsRequest.Size(m)
}
func (m *RunTestsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTestsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunTestsRequest proto.InternalMessageInfo

type isRunTestsRequest_Type interface {
	isRunTestsRequest_Type()
}

type RunTestsRequest_RunTestsInit struct {
	RunTestsInit *RunTestsInit `protobuf:"bytes,1,opt,name=run_tests_init,json=runTestsInit,proto3,oneof"`
}

func (*RunTestsRequest_RunTestsInit) isRunTestsRequest_Type() {}

func (m *RunTestsRequest) GetType() isRunTestsRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *RunTestsRequest) GetRunTestsInit() *RunTestsInit {
	if x, ok := m.GetType().(*RunTestsRequest_RunTestsInit); ok {
		return x.RunTestsInit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RunTestsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RunTestsRequest_RunTestsInit)(nil),
	}
}

type RunTestsResponse struct {
	// Types that are valid to be assigned to Type:
	//	*RunTestsResponse_RunLog
	//	*RunTestsResponse_EntityStart
	//	*RunTestsResponse_EntityLog
	//	*RunTestsResponse_EntityError
	//	*RunTestsResponse_EntityEnd
	Type                 isRunTestsResponse_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RunTestsResponse) Reset()         { *m = RunTestsResponse{} }
func (m *RunTestsResponse) String() string { return proto.CompactTextString(m) }
func (*RunTestsResponse) ProtoMessage()    {}
func (*RunTestsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{3}
}

func (m *RunTestsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTestsResponse.Unmarshal(m, b)
}
func (m *RunTestsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTestsResponse.Marshal(b, m, deterministic)
}
func (m *RunTestsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTestsResponse.Merge(m, src)
}
func (m *RunTestsResponse) XXX_Size() int {
	return xxx_messageInfo_RunTestsResponse.Size(m)
}
func (m *RunTestsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTestsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunTestsResponse proto.InternalMessageInfo

type isRunTestsResponse_Type interface {
	isRunTestsResponse_Type()
}

type RunTestsResponse_RunLog struct {
	RunLog *RunLogEvent `protobuf:"bytes,1,opt,name=run_log,json=runLog,proto3,oneof"`
}

type RunTestsResponse_EntityStart struct {
	EntityStart *EntityStartEvent `protobuf:"bytes,2,opt,name=entity_start,json=entityStart,proto3,oneof"`
}

type RunTestsResponse_EntityLog struct {
	EntityLog *EntityLogEvent `protobuf:"bytes,3,opt,name=entity_log,json=entityLog,proto3,oneof"`
}

type RunTestsResponse_EntityError struct {
	EntityError *EntityErrorEvent `protobuf:"bytes,4,opt,name=entity_error,json=entityError,proto3,oneof"`
}

type RunTestsResponse_EntityEnd struct {
	EntityEnd *EntityEndEvent `protobuf:"bytes,5,opt,name=entity_end,json=entityEnd,proto3,oneof"`
}

func (*RunTestsResponse_RunLog) isRunTestsResponse_Type() {}

func (*RunTestsResponse_EntityStart) isRunTestsResponse_Type() {}

func (*RunTestsResponse_EntityLog) isRunTestsResponse_Type() {}

func (*RunTestsResponse_EntityError) isRunTestsResponse_Type() {}

func (*RunTestsResponse_EntityEnd) isRunTestsResponse_Type() {}

func (m *RunTestsResponse) GetType() isRunTestsResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *RunTestsResponse) GetRunLog() *RunLogEvent {
	if x, ok := m.GetType().(*RunTestsResponse_RunLog); ok {
		return x.RunLog
	}
	return nil
}

func (m *RunTestsResponse) GetEntityStart() *EntityStartEvent {
	if x, ok := m.GetType().(*RunTestsResponse_EntityStart); ok {
		return x.EntityStart
	}
	return nil
}

func (m *RunTestsResponse) GetEntityLog() *EntityLogEvent {
	if x, ok := m.GetType().(*RunTestsResponse_EntityLog); ok {
		return x.EntityLog
	}
	return nil
}

func (m *RunTestsResponse) GetEntityError() *EntityErrorEvent {
	if x, ok := m.GetType().(*RunTestsResponse_EntityError); ok {
		return x.EntityError
	}
	return nil
}

func (m *RunTestsResponse) GetEntityEnd() *EntityEndEvent {
	if x, ok := m.GetType().(*RunTestsResponse_EntityEnd); ok {
		return x.EntityEnd
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RunTestsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RunTestsResponse_RunLog)(nil),
		(*RunTestsResponse_EntityStart)(nil),
		(*RunTestsResponse_EntityLog)(nil),
		(*RunTestsResponse_EntityError)(nil),
		(*RunTestsResponse_EntityEnd)(nil),
	}
}

// Entity describes an entity.
type Entity struct {
	Type                 EntityType          `protobuf:"varint,1,opt,name=type,proto3,enum=tast.core.EntityType" json:"type,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Package              string              `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
	Attributes           []string            `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Description          string              `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Fixture              string              `protobuf:"bytes,6,opt,name=fixture,proto3" json:"fixture,omitempty"`
	Dependencies         *EntityDependencies `protobuf:"bytes,7,opt,name=dependencies,proto3" json:"dependencies,omitempty"`
	Contacts             *EntityContacts     `protobuf:"bytes,8,opt,name=contacts,proto3" json:"contacts,omitempty"`
	LegacyData           *EntityLegacyData   `protobuf:"bytes,9,opt,name=legacy_data,json=legacyData,proto3" json:"legacy_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{4}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetType() EntityType {
	if m != nil {
		return m.Type
	}
	return EntityType_TEST
}

func (m *Entity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Entity) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *Entity) GetAttributes() []string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Entity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Entity) GetFixture() string {
	if m != nil {
		return m.Fixture
	}
	return ""
}

func (m *Entity) GetDependencies() *EntityDependencies {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func (m *Entity) GetContacts() *EntityContacts {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Entity) GetLegacyData() *EntityLegacyData {
	if m != nil {
		return m.LegacyData
	}
	return nil
}

// EntityContacts contains contact information of an entity.
type EntityContacts struct {
	Emails               []string `protobuf:"bytes,1,rep,name=emails,proto3" json:"emails,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityContacts) Reset()         { *m = EntityContacts{} }
func (m *EntityContacts) String() string { return proto.CompactTextString(m) }
func (*EntityContacts) ProtoMessage()    {}
func (*EntityContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{5}
}

func (m *EntityContacts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityContacts.Unmarshal(m, b)
}
func (m *EntityContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityContacts.Marshal(b, m, deterministic)
}
func (m *EntityContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityContacts.Merge(m, src)
}
func (m *EntityContacts) XXX_Size() int {
	return xxx_messageInfo_EntityContacts.Size(m)
}
func (m *EntityContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityContacts.DiscardUnknown(m)
}

var xxx_messageInfo_EntityContacts proto.InternalMessageInfo

func (m *EntityContacts) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

// EntityDependencies describes dependencies of an entity that need to be
// evaluated before running it.
type EntityDependencies struct {
	DataFiles            []string `protobuf:"bytes,1,rep,name=data_files,json=dataFiles,proto3" json:"data_files,omitempty"`
	Services             []string `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityDependencies) Reset()         { *m = EntityDependencies{} }
func (m *EntityDependencies) String() string { return proto.CompactTextString(m) }
func (*EntityDependencies) ProtoMessage()    {}
func (*EntityDependencies) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{6}
}

func (m *EntityDependencies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityDependencies.Unmarshal(m, b)
}
func (m *EntityDependencies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityDependencies.Marshal(b, m, deterministic)
}
func (m *EntityDependencies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityDependencies.Merge(m, src)
}
func (m *EntityDependencies) XXX_Size() int {
	return xxx_messageInfo_EntityDependencies.Size(m)
}
func (m *EntityDependencies) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityDependencies.DiscardUnknown(m)
}

var xxx_messageInfo_EntityDependencies proto.InternalMessageInfo

func (m *EntityDependencies) GetDataFiles() []string {
	if m != nil {
		return m.DataFiles
	}
	return nil
}

func (m *EntityDependencies) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

// EntityLegacyData contains extra information of an entity.
// Fields in this message are considered legacy because test bundles need to
// send these fields to Tast CLI just because they are made available in
// results.json for compatibility reasons.
type EntityLegacyData struct {
	Timeout              *duration.Duration `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Variables            []string           `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty"`
	VariableDeps         []string           `protobuf:"bytes,3,rep,name=variable_deps,json=variableDeps,proto3" json:"variable_deps,omitempty"`
	SoftwareDeps         []string           `protobuf:"bytes,4,rep,name=software_deps,json=softwareDeps,proto3" json:"software_deps,omitempty"`
	Bundle               string             `protobuf:"bytes,5,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EntityLegacyData) Reset()         { *m = EntityLegacyData{} }
func (m *EntityLegacyData) String() string { return proto.CompactTextString(m) }
func (*EntityLegacyData) ProtoMessage()    {}
func (*EntityLegacyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{7}
}

func (m *EntityLegacyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityLegacyData.Unmarshal(m, b)
}
func (m *EntityLegacyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityLegacyData.Marshal(b, m, deterministic)
}
func (m *EntityLegacyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityLegacyData.Merge(m, src)
}
func (m *EntityLegacyData) XXX_Size() int {
	return xxx_messageInfo_EntityLegacyData.Size(m)
}
func (m *EntityLegacyData) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityLegacyData.DiscardUnknown(m)
}

var xxx_messageInfo_EntityLegacyData proto.InternalMessageInfo

func (m *EntityLegacyData) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *EntityLegacyData) GetVariables() []string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *EntityLegacyData) GetVariableDeps() []string {
	if m != nil {
		return m.VariableDeps
	}
	return nil
}

func (m *EntityLegacyData) GetSoftwareDeps() []string {
	if m != nil {
		return m.SoftwareDeps
	}
	return nil
}

func (m *EntityLegacyData) GetBundle() string {
	if m != nil {
		return m.Bundle
	}
	return ""
}

type RunTestsInit struct {
	RunConfig            *RunConfig `protobuf:"bytes,1,opt,name=run_config,json=runConfig,proto3" json:"run_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RunTestsInit) Reset()         { *m = RunTestsInit{} }
func (m *RunTestsInit) String() string { return proto.CompactTextString(m) }
func (*RunTestsInit) ProtoMessage()    {}
func (*RunTestsInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{8}
}

func (m *RunTestsInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTestsInit.Unmarshal(m, b)
}
func (m *RunTestsInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTestsInit.Marshal(b, m, deterministic)
}
func (m *RunTestsInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTestsInit.Merge(m, src)
}
func (m *RunTestsInit) XXX_Size() int {
	return xxx_messageInfo_RunTestsInit.Size(m)
}
func (m *RunTestsInit) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTestsInit.DiscardUnknown(m)
}

var xxx_messageInfo_RunTestsInit proto.InternalMessageInfo

func (m *RunTestsInit) GetRunConfig() *RunConfig {
	if m != nil {
		return m.RunConfig
	}
	return nil
}

// RunConfig contains parameters needed to run tests in a test bundle.
type RunConfig struct {
	// Tests is a list of test names to be run. Wildcards are not allowed.
	Tests             []string           `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
	Dirs              *RunDirectories    `protobuf:"bytes,2,opt,name=dirs,proto3" json:"dirs,omitempty"`
	Features          *Features          `protobuf:"bytes,3,opt,name=features,proto3" json:"features,omitempty"`
	ServiceConfig     *ServiceConfig     `protobuf:"bytes,4,opt,name=service_config,json=serviceConfig,proto3" json:"service_config,omitempty"`
	DataFileConfig    *DataFileConfig    `protobuf:"bytes,5,opt,name=data_file_config,json=dataFileConfig,proto3" json:"data_file_config,omitempty"`
	RemoteTestConfig  *RemoteTestConfig  `protobuf:"bytes,6,opt,name=remote_test_config,json=remoteTestConfig,proto3" json:"remote_test_config,omitempty"`
	StartFixtureState *StartFixtureState `protobuf:"bytes,7,opt,name=start_fixture_state,json=startFixtureState,proto3" json:"start_fixture_state,omitempty"`
	// HeartbeatInterval is the interval in seconds at which heartbeat messages
	// are sent back periodically from runners (before running bundles) and
	// bundles. If this value is not positive, heartbeat messages are not sent.
	// TODO(crbug.com/1128259): Remove this field once we fully migrate to gRPC.
	HeartbeatInterval *duration.Duration `protobuf:"bytes,8,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	// WaitUntilReady indicates that the test bundle's "ready" function (see
	// ReadyFunc) should be executed before any tests are executed.
	// TODO(crbug.com/1128259): Remove this field once we fully migrate to gRPC.
	WaitUntilReady       bool     `protobuf:"varint,9,opt,name=wait_until_ready,json=waitUntilReady,proto3" json:"wait_until_ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunConfig) Reset()         { *m = RunConfig{} }
func (m *RunConfig) String() string { return proto.CompactTextString(m) }
func (*RunConfig) ProtoMessage()    {}
func (*RunConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{9}
}

func (m *RunConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunConfig.Unmarshal(m, b)
}
func (m *RunConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunConfig.Marshal(b, m, deterministic)
}
func (m *RunConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunConfig.Merge(m, src)
}
func (m *RunConfig) XXX_Size() int {
	return xxx_messageInfo_RunConfig.Size(m)
}
func (m *RunConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RunConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RunConfig proto.InternalMessageInfo

func (m *RunConfig) GetTests() []string {
	if m != nil {
		return m.Tests
	}
	return nil
}

func (m *RunConfig) GetDirs() *RunDirectories {
	if m != nil {
		return m.Dirs
	}
	return nil
}

func (m *RunConfig) GetFeatures() *Features {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *RunConfig) GetServiceConfig() *ServiceConfig {
	if m != nil {
		return m.ServiceConfig
	}
	return nil
}

func (m *RunConfig) GetDataFileConfig() *DataFileConfig {
	if m != nil {
		return m.DataFileConfig
	}
	return nil
}

func (m *RunConfig) GetRemoteTestConfig() *RemoteTestConfig {
	if m != nil {
		return m.RemoteTestConfig
	}
	return nil
}

func (m *RunConfig) GetStartFixtureState() *StartFixtureState {
	if m != nil {
		return m.StartFixtureState
	}
	return nil
}

func (m *RunConfig) GetHeartbeatInterval() *duration.Duration {
	if m != nil {
		return m.HeartbeatInterval
	}
	return nil
}

func (m *RunConfig) GetWaitUntilReady() bool {
	if m != nil {
		return m.WaitUntilReady
	}
	return false
}

// RunDirectories holds several directory paths important for running tests.
type RunDirectories struct {
	// DataDir is the path to the directory containing test data files.
	DataDir string `protobuf:"bytes,1,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	// OutDir is the path to the base directory under which tests should write
	// output files.
	OutDir string `protobuf:"bytes,2,opt,name=out_dir,json=outDir,proto3" json:"out_dir,omitempty"`
	// TempDir is the path to the directory under which temporary files for tests
	// are written.
	TempDir              string   `protobuf:"bytes,3,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunDirectories) Reset()         { *m = RunDirectories{} }
func (m *RunDirectories) String() string { return proto.CompactTextString(m) }
func (*RunDirectories) ProtoMessage()    {}
func (*RunDirectories) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{10}
}

func (m *RunDirectories) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunDirectories.Unmarshal(m, b)
}
func (m *RunDirectories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunDirectories.Marshal(b, m, deterministic)
}
func (m *RunDirectories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunDirectories.Merge(m, src)
}
func (m *RunDirectories) XXX_Size() int {
	return xxx_messageInfo_RunDirectories.Size(m)
}
func (m *RunDirectories) XXX_DiscardUnknown() {
	xxx_messageInfo_RunDirectories.DiscardUnknown(m)
}

var xxx_messageInfo_RunDirectories proto.InternalMessageInfo

func (m *RunDirectories) GetDataDir() string {
	if m != nil {
		return m.DataDir
	}
	return ""
}

func (m *RunDirectories) GetOutDir() string {
	if m != nil {
		return m.OutDir
	}
	return ""
}

func (m *RunDirectories) GetTempDir() string {
	if m != nil {
		return m.TempDir
	}
	return ""
}

// ServiceConfig contains configurations of external services available to
// Tast framework and Tast tests.
type ServiceConfig struct {
	// Devservers is a list of devserver URLs (e.g. "https://1.2.3.4:5678").
	// Devservers are used to download data files from Google Cloud Storage with
	// cache. It is ignored if TlwServer is available.
	Devservers []string `protobuf:"bytes,1,rep,name=devservers,proto3" json:"devservers,omitempty"`
	// TlwServer is an address of a TLW server (e.g. "1.2.3.4:5678").
	// When this is set, it takes precedence over Devservers.
	TlwServer string `protobuf:"bytes,2,opt,name=tlw_server,json=tlwServer,proto3" json:"tlw_server,omitempty"`
	// TlwSelfName is a "DUT name" that identifies the current machine.
	// It is empty for remote tests.
	TlwSelfName          string   `protobuf:"bytes,3,opt,name=tlw_self_name,json=tlwSelfName,proto3" json:"tlw_self_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceConfig) Reset()         { *m = ServiceConfig{} }
func (m *ServiceConfig) String() string { return proto.CompactTextString(m) }
func (*ServiceConfig) ProtoMessage()    {}
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{11}
}

func (m *ServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceConfig.Unmarshal(m, b)
}
func (m *ServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceConfig.Marshal(b, m, deterministic)
}
func (m *ServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceConfig.Merge(m, src)
}
func (m *ServiceConfig) XXX_Size() int {
	return xxx_messageInfo_ServiceConfig.Size(m)
}
func (m *ServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceConfig proto.InternalMessageInfo

func (m *ServiceConfig) GetDevservers() []string {
	if m != nil {
		return m.Devservers
	}
	return nil
}

func (m *ServiceConfig) GetTlwServer() string {
	if m != nil {
		return m.TlwServer
	}
	return ""
}

func (m *ServiceConfig) GetTlwSelfName() string {
	if m != nil {
		return m.TlwSelfName
	}
	return ""
}

// DataFileConfig contains configurations about data files.
type DataFileConfig struct {
	DownloadMode DownloadMode `protobuf:"varint,1,opt,name=download_mode,json=downloadMode,proto3,enum=tast.core.DownloadMode" json:"download_mode,omitempty"`
	// BuildArtifactsUrl is the URL of Google Cloud Storage directory, ending with
	// a slash, containing build artifacts for the current Chrome OS image.
	BuildArtifactsUrl    string   `protobuf:"bytes,2,opt,name=build_artifacts_url,json=buildArtifactsUrl,proto3" json:"build_artifacts_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataFileConfig) Reset()         { *m = DataFileConfig{} }
func (m *DataFileConfig) String() string { return proto.CompactTextString(m) }
func (*DataFileConfig) ProtoMessage()    {}
func (*DataFileConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{12}
}

func (m *DataFileConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataFileConfig.Unmarshal(m, b)
}
func (m *DataFileConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataFileConfig.Marshal(b, m, deterministic)
}
func (m *DataFileConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataFileConfig.Merge(m, src)
}
func (m *DataFileConfig) XXX_Size() int {
	return xxx_messageInfo_DataFileConfig.Size(m)
}
func (m *DataFileConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DataFileConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DataFileConfig proto.InternalMessageInfo

func (m *DataFileConfig) GetDownloadMode() DownloadMode {
	if m != nil {
		return m.DownloadMode
	}
	return DownloadMode_BATCH
}

func (m *DataFileConfig) GetBuildArtifactsUrl() string {
	if m != nil {
		return m.BuildArtifactsUrl
	}
	return ""
}

// RemoteTestConfig contains parameters needed by remote tests.
type RemoteTestConfig struct {
	PrimaryDut    *DUTConfig            `protobuf:"bytes,1,opt,name=primary_dut,json=primaryDut,proto3" json:"primary_dut,omitempty"`
	CompanionDuts map[string]*DUTConfig `protobuf:"bytes,2,rep,name=companion_duts,json=companionDuts,proto3" json:"companion_duts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// LocalBundleDir is the directory on the DUT where local test bundle
	// executables are located. This path is used by remote tests to invoke gRPC
	// services in local test bundles.
	LocalBundleDir       string          `protobuf:"bytes,3,opt,name=local_bundle_dir,json=localBundleDir,proto3" json:"local_bundle_dir,omitempty"`
	MetaTestConfig       *MetaTestConfig `protobuf:"bytes,4,opt,name=meta_test_config,json=metaTestConfig,proto3" json:"meta_test_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemoteTestConfig) Reset()         { *m = RemoteTestConfig{} }
func (m *RemoteTestConfig) String() string { return proto.CompactTextString(m) }
func (*RemoteTestConfig) ProtoMessage()    {}
func (*RemoteTestConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{13}
}

func (m *RemoteTestConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteTestConfig.Unmarshal(m, b)
}
func (m *RemoteTestConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteTestConfig.Marshal(b, m, deterministic)
}
func (m *RemoteTestConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteTestConfig.Merge(m, src)
}
func (m *RemoteTestConfig) XXX_Size() int {
	return xxx_messageInfo_RemoteTestConfig.Size(m)
}
func (m *RemoteTestConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteTestConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteTestConfig proto.InternalMessageInfo

func (m *RemoteTestConfig) GetPrimaryDut() *DUTConfig {
	if m != nil {
		return m.PrimaryDut
	}
	return nil
}

func (m *RemoteTestConfig) GetCompanionDuts() map[string]*DUTConfig {
	if m != nil {
		return m.CompanionDuts
	}
	return nil
}

func (m *RemoteTestConfig) GetLocalBundleDir() string {
	if m != nil {
		return m.LocalBundleDir
	}
	return ""
}

func (m *RemoteTestConfig) GetMetaTestConfig() *MetaTestConfig {
	if m != nil {
		return m.MetaTestConfig
	}
	return nil
}

// DUTConfig describes a DUT.
type DUTConfig struct {
	// SshConfig contains information needed to connect to the DUT via SSH.
	SshConfig *SSHConfig `protobuf:"bytes,1,opt,name=ssh_config,json=sshConfig,proto3" json:"ssh_config,omitempty"`
	// TlwName contains the name of the DUT recognized by the TLW service.
	// This must be set when TLW API is used.
	TlwName              string   `protobuf:"bytes,2,opt,name=tlw_name,json=tlwName,proto3" json:"tlw_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DUTConfig) Reset()         { *m = DUTConfig{} }
func (m *DUTConfig) String() string { return proto.CompactTextString(m) }
func (*DUTConfig) ProtoMessage()    {}
func (*DUTConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{14}
}

func (m *DUTConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DUTConfig.Unmarshal(m, b)
}
func (m *DUTConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DUTConfig.Marshal(b, m, deterministic)
}
func (m *DUTConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DUTConfig.Merge(m, src)
}
func (m *DUTConfig) XXX_Size() int {
	return xxx_messageInfo_DUTConfig.Size(m)
}
func (m *DUTConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DUTConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DUTConfig proto.InternalMessageInfo

func (m *DUTConfig) GetSshConfig() *SSHConfig {
	if m != nil {
		return m.SshConfig
	}
	return nil
}

func (m *DUTConfig) GetTlwName() string {
	if m != nil {
		return m.TlwName
	}
	return ""
}

// SSHConfig contains information needed to connect to the DUT via SSH.
type SSHConfig struct {
	// Target is a connection spec as [<user>@]host[:<port>].
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// KeyFile is a path to the SSH private key to use to connect to the target.
	KeyFile string `protobuf:"bytes,2,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
	// KeyDir is a path to the directory containing SSH private keys
	// (typically $HOME/.ssh).
	KeyDir               string   `protobuf:"bytes,3,opt,name=key_dir,json=keyDir,proto3" json:"key_dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSHConfig) Reset()         { *m = SSHConfig{} }
func (m *SSHConfig) String() string { return proto.CompactTextString(m) }
func (*SSHConfig) ProtoMessage()    {}
func (*SSHConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{15}
}

func (m *SSHConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSHConfig.Unmarshal(m, b)
}
func (m *SSHConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSHConfig.Marshal(b, m, deterministic)
}
func (m *SSHConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSHConfig.Merge(m, src)
}
func (m *SSHConfig) XXX_Size() int {
	return xxx_messageInfo_SSHConfig.Size(m)
}
func (m *SSHConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SSHConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SSHConfig proto.InternalMessageInfo

func (m *SSHConfig) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *SSHConfig) GetKeyFile() string {
	if m != nil {
		return m.KeyFile
	}
	return ""
}

func (m *SSHConfig) GetKeyDir() string {
	if m != nil {
		return m.KeyDir
	}
	return ""
}

// MetaTestConfig contains parameters needed by meta tests (tests that
// exercise Tast itself).
type MetaTestConfig struct {
	// TastPath contains the path to the tast binary that was executed to initiate
	// testing.
	TastPath string `protobuf:"bytes,1,opt,name=tast_path,json=tastPath,proto3" json:"tast_path,omitempty"`
	// RunFlags contains a subset of the flags that were passed to the "tast run"
	// command. The included flags are ones that are necessary for core
	// functionality, e.g. paths to binaries used by the tast process and
	// credentials for reconnecting to the DUT.
	RunFlags             []string `protobuf:"bytes,2,rep,name=run_flags,json=runFlags,proto3" json:"run_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaTestConfig) Reset()         { *m = MetaTestConfig{} }
func (m *MetaTestConfig) String() string { return proto.CompactTextString(m) }
func (*MetaTestConfig) ProtoMessage()    {}
func (*MetaTestConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{16}
}

func (m *MetaTestConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaTestConfig.Unmarshal(m, b)
}
func (m *MetaTestConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaTestConfig.Marshal(b, m, deterministic)
}
func (m *MetaTestConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaTestConfig.Merge(m, src)
}
func (m *MetaTestConfig) XXX_Size() int {
	return xxx_messageInfo_MetaTestConfig.Size(m)
}
func (m *MetaTestConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaTestConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MetaTestConfig proto.InternalMessageInfo

func (m *MetaTestConfig) GetTastPath() string {
	if m != nil {
		return m.TastPath
	}
	return ""
}

func (m *MetaTestConfig) GetRunFlags() []string {
	if m != nil {
		return m.RunFlags
	}
	return nil
}

// StartFixtureState contains information of a start fixture.
type StartFixtureState struct {
	// Name is the name of a start fixture.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Errors contains errors reported on dependent fixture setup. If it is not
	// empty, all fixtures and tests should fail immediately.
	Errors               []*Error `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFixtureState) Reset()         { *m = StartFixtureState{} }
func (m *StartFixtureState) String() string { return proto.CompactTextString(m) }
func (*StartFixtureState) ProtoMessage()    {}
func (*StartFixtureState) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{17}
}

func (m *StartFixtureState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFixtureState.Unmarshal(m, b)
}
func (m *StartFixtureState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFixtureState.Marshal(b, m, deterministic)
}
func (m *StartFixtureState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFixtureState.Merge(m, src)
}
func (m *StartFixtureState) XXX_Size() int {
	return xxx_messageInfo_StartFixtureState.Size(m)
}
func (m *StartFixtureState) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFixtureState.DiscardUnknown(m)
}

var xxx_messageInfo_StartFixtureState proto.InternalMessageInfo

func (m *StartFixtureState) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StartFixtureState) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

// Error describes details of an error reported by an entity.
type Error struct {
	Reason               string         `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Location             *ErrorLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{18}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Error) GetLocation() *ErrorLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

// ErrorLocation represents a code location where an error was reported.
type ErrorLocation struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Line                 int64    `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	Stack                string   `protobuf:"bytes,3,opt,name=stack,proto3" json:"stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorLocation) Reset()         { *m = ErrorLocation{} }
func (m *ErrorLocation) String() string { return proto.CompactTextString(m) }
func (*ErrorLocation) ProtoMessage()    {}
func (*ErrorLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{19}
}

func (m *ErrorLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorLocation.Unmarshal(m, b)
}
func (m *ErrorLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorLocation.Marshal(b, m, deterministic)
}
func (m *ErrorLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorLocation.Merge(m, src)
}
func (m *ErrorLocation) XXX_Size() int {
	return xxx_messageInfo_ErrorLocation.Size(m)
}
func (m *ErrorLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorLocation.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorLocation proto.InternalMessageInfo

func (m *ErrorLocation) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *ErrorLocation) GetLine() int64 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *ErrorLocation) GetStack() string {
	if m != nil {
		return m.Stack
	}
	return ""
}

// ResolvedEntity is similar to Entity, but contains additional fields computed
// from an original Entity and run time information.
type ResolvedEntity struct {
	Entity               *Entity  `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Skip                 *Skip    `protobuf:"bytes,2,opt,name=skip,proto3" json:"skip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolvedEntity) Reset()         { *m = ResolvedEntity{} }
func (m *ResolvedEntity) String() string { return proto.CompactTextString(m) }
func (*ResolvedEntity) ProtoMessage()    {}
func (*ResolvedEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{20}
}

func (m *ResolvedEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolvedEntity.Unmarshal(m, b)
}
func (m *ResolvedEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolvedEntity.Marshal(b, m, deterministic)
}
func (m *ResolvedEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolvedEntity.Merge(m, src)
}
func (m *ResolvedEntity) XXX_Size() int {
	return xxx_messageInfo_ResolvedEntity.Size(m)
}
func (m *ResolvedEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolvedEntity.DiscardUnknown(m)
}

var xxx_messageInfo_ResolvedEntity proto.InternalMessageInfo

func (m *ResolvedEntity) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ResolvedEntity) GetSkip() *Skip {
	if m != nil {
		return m.Skip
	}
	return nil
}

// TimingLog is a protobuf presentation of a timing.Log.
type TimingLog struct {
	Root                 *TimingStage `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TimingLog) Reset()         { *m = TimingLog{} }
func (m *TimingLog) String() string { return proto.CompactTextString(m) }
func (*TimingLog) ProtoMessage()    {}
func (*TimingLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{21}
}

func (m *TimingLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimingLog.Unmarshal(m, b)
}
func (m *TimingLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimingLog.Marshal(b, m, deterministic)
}
func (m *TimingLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimingLog.Merge(m, src)
}
func (m *TimingLog) XXX_Size() int {
	return xxx_messageInfo_TimingLog.Size(m)
}
func (m *TimingLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TimingLog.DiscardUnknown(m)
}

var xxx_messageInfo_TimingLog proto.InternalMessageInfo

func (m *TimingLog) GetRoot() *TimingStage {
	if m != nil {
		return m.Root
	}
	return nil
}

// TimingStage is a protobuf presentation of a completed timing.Stage.
type TimingStage struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Children             []*TimingStage       `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimingStage) Reset()         { *m = TimingStage{} }
func (m *TimingStage) String() string { return proto.CompactTextString(m) }
func (*TimingStage) ProtoMessage()    {}
func (*TimingStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{22}
}

func (m *TimingStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimingStage.Unmarshal(m, b)
}
func (m *TimingStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimingStage.Marshal(b, m, deterministic)
}
func (m *TimingStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimingStage.Merge(m, src)
}
func (m *TimingStage) XXX_Size() int {
	return xxx_messageInfo_TimingStage.Size(m)
}
func (m *TimingStage) XXX_DiscardUnknown() {
	xxx_messageInfo_TimingStage.DiscardUnknown(m)
}

var xxx_messageInfo_TimingStage proto.InternalMessageInfo

func (m *TimingStage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TimingStage) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimingStage) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *TimingStage) GetChildren() []*TimingStage {
	if m != nil {
		return m.Children
	}
	return nil
}

// RunLogEvent indicates that an informational log message not associated with
// an entity was produced.
type RunLogEvent struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Text                 string               `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RunLogEvent) Reset()         { *m = RunLogEvent{} }
func (m *RunLogEvent) String() string { return proto.CompactTextString(m) }
func (*RunLogEvent) ProtoMessage()    {}
func (*RunLogEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{23}
}

func (m *RunLogEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunLogEvent.Unmarshal(m, b)
}
func (m *RunLogEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunLogEvent.Marshal(b, m, deterministic)
}
func (m *RunLogEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunLogEvent.Merge(m, src)
}
func (m *RunLogEvent) XXX_Size() int {
	return xxx_messageInfo_RunLogEvent.Size(m)
}
func (m *RunLogEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RunLogEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RunLogEvent proto.InternalMessageInfo

func (m *RunLogEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *RunLogEvent) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// EntityStartEvent marks the start of an entity run. EntityStartEvent is sent
// even if an entity is to be skipped.
type EntityStartEvent struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Entity               *Entity              `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	OutDir               string               `protobuf:"bytes,3,opt,name=out_dir,json=outDir,proto3" json:"out_dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EntityStartEvent) Reset()         { *m = EntityStartEvent{} }
func (m *EntityStartEvent) String() string { return proto.CompactTextString(m) }
func (*EntityStartEvent) ProtoMessage()    {}
func (*EntityStartEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{24}
}

func (m *EntityStartEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityStartEvent.Unmarshal(m, b)
}
func (m *EntityStartEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityStartEvent.Marshal(b, m, deterministic)
}
func (m *EntityStartEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityStartEvent.Merge(m, src)
}
func (m *EntityStartEvent) XXX_Size() int {
	return xxx_messageInfo_EntityStartEvent.Size(m)
}
func (m *EntityStartEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityStartEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EntityStartEvent proto.InternalMessageInfo

func (m *EntityStartEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *EntityStartEvent) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *EntityStartEvent) GetOutDir() string {
	if m != nil {
		return m.OutDir
	}
	return ""
}

// EntityLogEvent indicates that an informational log message was produced by
// an entity.
type EntityLogEvent struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	EntityName           string               `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	Text                 string               `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EntityLogEvent) Reset()         { *m = EntityLogEvent{} }
func (m *EntityLogEvent) String() string { return proto.CompactTextString(m) }
func (*EntityLogEvent) ProtoMessage()    {}
func (*EntityLogEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{25}
}

func (m *EntityLogEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityLogEvent.Unmarshal(m, b)
}
func (m *EntityLogEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityLogEvent.Marshal(b, m, deterministic)
}
func (m *EntityLogEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityLogEvent.Merge(m, src)
}
func (m *EntityLogEvent) XXX_Size() int {
	return xxx_messageInfo_EntityLogEvent.Size(m)
}
func (m *EntityLogEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityLogEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EntityLogEvent proto.InternalMessageInfo

func (m *EntityLogEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *EntityLogEvent) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

func (m *EntityLogEvent) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// EntityErrorEvent indicates that an error was produced by an entity.
// A consumer should treat an entity as failed when it sees one or more errors
// reported for it.
type EntityErrorEvent struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	EntityName           string               `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	Error                *Error               `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EntityErrorEvent) Reset()         { *m = EntityErrorEvent{} }
func (m *EntityErrorEvent) String() string { return proto.CompactTextString(m) }
func (*EntityErrorEvent) ProtoMessage()    {}
func (*EntityErrorEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{26}
}

func (m *EntityErrorEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityErrorEvent.Unmarshal(m, b)
}
func (m *EntityErrorEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityErrorEvent.Marshal(b, m, deterministic)
}
func (m *EntityErrorEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityErrorEvent.Merge(m, src)
}
func (m *EntityErrorEvent) XXX_Size() int {
	return xxx_messageInfo_EntityErrorEvent.Size(m)
}
func (m *EntityErrorEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityErrorEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EntityErrorEvent proto.InternalMessageInfo

func (m *EntityErrorEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *EntityErrorEvent) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

func (m *EntityErrorEvent) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// EntityEndEvent marks the end of an entity run.
type EntityEndEvent struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	EntityName           string               `protobuf:"bytes,2,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	Skip                 *Skip                `protobuf:"bytes,3,opt,name=skip,proto3" json:"skip,omitempty"`
	TimingLog            *TimingLog           `protobuf:"bytes,4,opt,name=timing_log,json=timingLog,proto3" json:"timing_log,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EntityEndEvent) Reset()         { *m = EntityEndEvent{} }
func (m *EntityEndEvent) String() string { return proto.CompactTextString(m) }
func (*EntityEndEvent) ProtoMessage()    {}
func (*EntityEndEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{27}
}

func (m *EntityEndEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityEndEvent.Unmarshal(m, b)
}
func (m *EntityEndEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityEndEvent.Marshal(b, m, deterministic)
}
func (m *EntityEndEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityEndEvent.Merge(m, src)
}
func (m *EntityEndEvent) XXX_Size() int {
	return xxx_messageInfo_EntityEndEvent.Size(m)
}
func (m *EntityEndEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityEndEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EntityEndEvent proto.InternalMessageInfo

func (m *EntityEndEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *EntityEndEvent) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

func (m *EntityEndEvent) GetSkip() *Skip {
	if m != nil {
		return m.Skip
	}
	return nil
}

func (m *EntityEndEvent) GetTimingLog() *TimingLog {
	if m != nil {
		return m.TimingLog
	}
	return nil
}

// Skip describes the reasons why an entity is skipped.
type Skip struct {
	Reasons              []string `protobuf:"bytes,1,rep,name=reasons,proto3" json:"reasons,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Skip) Reset()         { *m = Skip{} }
func (m *Skip) String() string { return proto.CompactTextString(m) }
func (*Skip) ProtoMessage()    {}
func (*Skip) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a0b3d6cfd712914, []int{28}
}

func (m *Skip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Skip.Unmarshal(m, b)
}
func (m *Skip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Skip.Marshal(b, m, deterministic)
}
func (m *Skip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Skip.Merge(m, src)
}
func (m *Skip) XXX_Size() int {
	return xxx_messageInfo_Skip.Size(m)
}
func (m *Skip) XXX_DiscardUnknown() {
	xxx_messageInfo_Skip.DiscardUnknown(m)
}

var xxx_messageInfo_Skip proto.InternalMessageInfo

func (m *Skip) GetReasons() []string {
	if m != nil {
		return m.Reasons
	}
	return nil
}

func init() {
	proto.RegisterEnum("tast.core.EntityType", EntityType_name, EntityType_value)
	proto.RegisterEnum("tast.core.DownloadMode", DownloadMode_name, DownloadMode_value)
	proto.RegisterType((*ListEntitiesRequest)(nil), "tast.core.ListEntitiesRequest")
	proto.RegisterType((*ListEntitiesResponse)(nil), "tast.core.ListEntitiesResponse")
	proto.RegisterType((*RunTestsRequest)(nil), "tast.core.RunTestsRequest")
	proto.RegisterType((*RunTestsResponse)(nil), "tast.core.RunTestsResponse")
	proto.RegisterType((*Entity)(nil), "tast.core.Entity")
	proto.RegisterType((*EntityContacts)(nil), "tast.core.EntityContacts")
	proto.RegisterType((*EntityDependencies)(nil), "tast.core.EntityDependencies")
	proto.RegisterType((*EntityLegacyData)(nil), "tast.core.EntityLegacyData")
	proto.RegisterType((*RunTestsInit)(nil), "tast.core.RunTestsInit")
	proto.RegisterType((*RunConfig)(nil), "tast.core.RunConfig")
	proto.RegisterType((*RunDirectories)(nil), "tast.core.RunDirectories")
	proto.RegisterType((*ServiceConfig)(nil), "tast.core.ServiceConfig")
	proto.RegisterType((*DataFileConfig)(nil), "tast.core.DataFileConfig")
	proto.RegisterType((*RemoteTestConfig)(nil), "tast.core.RemoteTestConfig")
	proto.RegisterMapType((map[string]*DUTConfig)(nil), "tast.core.RemoteTestConfig.CompanionDutsEntry")
	proto.RegisterType((*DUTConfig)(nil), "tast.core.DUTConfig")
	proto.RegisterType((*SSHConfig)(nil), "tast.core.SSHConfig")
	proto.RegisterType((*MetaTestConfig)(nil), "tast.core.MetaTestConfig")
	proto.RegisterType((*StartFixtureState)(nil), "tast.core.StartFixtureState")
	proto.RegisterType((*Error)(nil), "tast.core.Error")
	proto.RegisterType((*ErrorLocation)(nil), "tast.core.ErrorLocation")
	proto.RegisterType((*ResolvedEntity)(nil), "tast.core.ResolvedEntity")
	proto.RegisterType((*TimingLog)(nil), "tast.core.TimingLog")
	proto.RegisterType((*TimingStage)(nil), "tast.core.TimingStage")
	proto.RegisterType((*RunLogEvent)(nil), "tast.core.RunLogEvent")
	proto.RegisterType((*EntityStartEvent)(nil), "tast.core.EntityStartEvent")
	proto.RegisterType((*EntityLogEvent)(nil), "tast.core.EntityLogEvent")
	proto.RegisterType((*EntityErrorEvent)(nil), "tast.core.EntityErrorEvent")
	proto.RegisterType((*EntityEndEvent)(nil), "tast.core.EntityEndEvent")
	proto.RegisterType((*Skip)(nil), "tast.core.Skip")
}

func init() { proto.RegisterFile("testing.proto", fileDescriptor_7a0b3d6cfd712914) }

var fileDescriptor_7a0b3d6cfd712914 = []byte{
	// 1759 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xdd, 0x72, 0x1b, 0x49,
	0x15, 0x8e, 0x2c, 0x59, 0xd2, 0x1c, 0xc9, 0x5a, 0xa5, 0x13, 0xb2, 0xb2, 0xb3, 0x9b, 0x98, 0x71,
	0x15, 0xe5, 0x4d, 0x15, 0x32, 0x38, 0x6c, 0x01, 0x5b, 0x5b, 0x05, 0x89, 0x65, 0x57, 0x4c, 0x39,
	0x40, 0xc6, 0x32, 0x3f, 0xe1, 0x62, 0x68, 0xcf, 0xb4, 0xe4, 0x2e, 0x8f, 0x66, 0x44, 0x77, 0x8f,
	0xbd, 0xba, 0xe1, 0x92, 0x1b, 0x6e, 0x79, 0x0b, 0x1e, 0x81, 0x07, 0xa0, 0x78, 0x12, 0x9e, 0x80,
	0x7b, 0xea, 0xf4, 0xcf, 0xb8, 0x65, 0xd9, 0x1b, 0xd8, 0xda, 0xbb, 0x39, 0xbf, 0x7d, 0xfa, 0xf4,
	0x39, 0x5f, 0x9f, 0x1e, 0xd8, 0x50, 0x4c, 0x2a, 0x9e, 0x4f, 0x87, 0x73, 0x51, 0xa8, 0x82, 0x04,
	0x8a, 0x4a, 0x35, 0x4c, 0x0a, 0xc1, 0xb6, 0x9e, 0x4d, 0x8b, 0x62, 0x9a, 0xb1, 0x3d, 0x2d, 0x38,
	0x2f, 0x27, 0x7b, 0x69, 0x29, 0xa8, 0xe2, 0x45, 0x6e, 0x54, 0xb7, 0x9e, 0xdf, 0x96, 0x2b, 0x3e,
	0x63, 0x52, 0xd1, 0xd9, 0xdc, 0x2a, 0xf4, 0x26, 0x8c, 0xaa, 0x52, 0x30, 0x69, 0xe8, 0xf0, 0x08,
	0x1e, 0x9d, 0x70, 0xa9, 0x0e, 0x73, 0xc5, 0x15, 0x67, 0x32, 0x62, 0x7f, 0x2a, 0x99, 0x54, 0x64,
	0x0f, 0xda, 0x4e, 0x71, 0x50, 0xdb, 0xae, 0xed, 0x76, 0xf6, 0x1f, 0x0d, 0xab, 0x28, 0x86, 0x47,
	0x56, 0x14, 0x55, 0x4a, 0xe1, 0x5b, 0x78, 0xbc, 0xec, 0x47, 0xce, 0x8b, 0x5c, 0x32, 0xf2, 0x39,
	0xb4, 0x99, 0xe5, 0x0d, 0x6a, 0xdb, 0xf5, 0xdd, 0xce, 0xfe, 0xa6, 0xe7, 0x28, 0x62, 0xb2, 0xc8,
	0xae, 0x58, 0xaa, 0xcd, 0x16, 0x51, 0xa5, 0x1a, 0xbe, 0x87, 0x8f, 0xa2, 0x32, 0x1f, 0x33, 0xa9,
	0xaa, 0x90, 0x7e, 0x06, 0x3d, 0x51, 0xe6, 0x31, 0xa6, 0x46, 0xc6, 0x3c, 0xe7, 0xca, 0x06, 0xf6,
	0xb1, 0xef, 0xcf, 0xda, 0x1c, 0xe7, 0x5c, 0xbd, 0x79, 0x10, 0x75, 0x85, 0x47, 0xbf, 0x6e, 0x42,
	0x43, 0x2d, 0xe6, 0x2c, 0xfc, 0xd7, 0x1a, 0xf4, 0x6f, 0x9c, 0xdb, 0x38, 0x7f, 0x08, 0x2d, 0xf4,
	0x9e, 0x15, 0x53, 0xeb, 0xf6, 0xc9, 0xb2, 0xdb, 0x93, 0x62, 0x7a, 0x78, 0xc5, 0x72, 0xf4, 0xda,
	0x14, 0x9a, 0x24, 0x3f, 0x87, 0xae, 0x8e, 0x77, 0x11, 0x4b, 0x45, 0x85, 0x1a, 0xac, 0x69, 0xbb,
	0xa7, 0x9e, 0x9d, 0xd9, 0xd6, 0x29, 0x4a, 0x9d, 0x71, 0x87, 0xdd, 0xf0, 0xc8, 0x17, 0x00, 0xd6,
	0x03, 0xae, 0x5b, 0xd7, 0xf6, 0x9b, 0x2b, 0xf6, 0xde, 0xd2, 0x01, 0x73, 0x1c, 0x6f, 0x75, 0x26,
	0x44, 0x21, 0x06, 0x8d, 0x7b, 0x56, 0x3f, 0x44, 0xe9, 0xad, 0xd5, 0x35, 0xcf, 0x5b, 0x9d, 0xe5,
	0xe9, 0x60, 0xfd, 0x9e, 0xd5, 0x0f, 0xf3, 0xf4, 0xd6, 0xea, 0x87, 0x79, 0x5a, 0xe5, 0xf2, 0x3f,
	0x6b, 0xd0, 0x34, 0x7a, 0xe4, 0x33, 0xc3, 0xd2, 0xe9, 0xeb, 0xed, 0x7f, 0x67, 0xc5, 0xd1, 0x78,
	0x31, 0x67, 0x91, 0x56, 0x21, 0x04, 0x1a, 0x39, 0x9d, 0x31, 0x9d, 0xb1, 0x20, 0xd2, 0xdf, 0x64,
	0x00, 0xad, 0x39, 0x4d, 0x2e, 0xe9, 0x94, 0xe9, 0x44, 0x04, 0x91, 0x23, 0xc9, 0x33, 0x00, 0xaa,
	0x94, 0xe0, 0xe7, 0xa5, 0x62, 0x72, 0xd0, 0xd8, 0xae, 0xef, 0x06, 0x91, 0xc7, 0x21, 0xdb, 0xd0,
	0x49, 0x99, 0x4c, 0x04, 0x9f, 0x63, 0x23, 0xe8, 0x8d, 0x04, 0x91, 0xcf, 0x42, 0xdf, 0x13, 0xfe,
	0x15, 0x16, 0xea, 0xa0, 0x69, 0x7c, 0x5b, 0x92, 0xbc, 0x82, 0x6e, 0xca, 0xe6, 0x2c, 0x4f, 0x59,
	0x9e, 0x60, 0x89, 0xb6, 0x74, 0x16, 0x3e, 0x5d, 0x09, 0x7e, 0xe4, 0x29, 0x45, 0x4b, 0x26, 0x58,
	0xe1, 0x49, 0x91, 0x2b, 0x9a, 0x28, 0x39, 0x68, 0xdf, 0x93, 0xc4, 0x03, 0xab, 0x10, 0x55, 0xaa,
	0xe4, 0x4b, 0xe8, 0x64, 0x6c, 0x4a, 0x93, 0x45, 0x9c, 0x52, 0x45, 0x07, 0xc1, 0x3d, 0xc7, 0x77,
	0xa2, 0x75, 0x46, 0x54, 0xd1, 0x08, 0xb2, 0xea, 0x3b, 0xdc, 0x85, 0xde, 0xb2, 0x67, 0xf2, 0x04,
	0x9a, 0x6c, 0x46, 0x79, 0x66, 0xda, 0x2c, 0x88, 0x2c, 0x15, 0xfe, 0x0a, 0xc8, 0xea, 0x16, 0xc8,
	0xa7, 0x00, 0xb8, 0x6c, 0x3c, 0xe1, 0x19, 0x73, 0x16, 0x01, 0x72, 0x8e, 0x90, 0x41, 0xb6, 0xa0,
	0x2d, 0x99, 0xb8, 0xe2, 0x09, 0x93, 0x83, 0x35, 0x2d, 0xac, 0xe8, 0xf0, 0x9f, 0x35, 0xe8, 0xdf,
	0x8e, 0x8d, 0xbc, 0x84, 0x16, 0x22, 0x4d, 0x51, 0xba, 0xae, 0xdc, 0x1c, 0x1a, 0x24, 0x1a, 0x3a,
	0x24, 0x1a, 0x8e, 0x2c, 0x52, 0x45, 0x4e, 0x93, 0x7c, 0x02, 0xc1, 0x15, 0x15, 0x9c, 0x9e, 0x67,
	0xd5, 0x32, 0x37, 0x0c, 0xb2, 0x03, 0x1b, 0x8e, 0x88, 0x53, 0x36, 0x97, 0x83, 0xba, 0xd6, 0xe8,
	0x3a, 0xe6, 0x88, 0xcd, 0xb5, 0x92, 0x2c, 0x26, 0xea, 0x9a, 0x0a, 0xab, 0x64, 0xca, 0xa3, 0xeb,
	0x98, 0x5a, 0xe9, 0x09, 0x34, 0xcf, 0xcb, 0x3c, 0xcd, 0x98, 0xad, 0x0d, 0x4b, 0x85, 0x07, 0xd0,
	0xf5, 0x01, 0x83, 0xbc, 0x04, 0x40, 0x0c, 0x48, 0x8a, 0x7c, 0xc2, 0x1d, 0x0c, 0x3c, 0x5e, 0x86,
	0x81, 0x03, 0x2d, 0x8b, 0x02, 0xe1, 0x3e, 0xc3, 0xbf, 0x35, 0x20, 0xa8, 0x04, 0xe4, 0x31, 0xac,
	0x6b, 0x80, 0xb2, 0x29, 0x35, 0x04, 0xf9, 0x3e, 0x34, 0x52, 0x2e, 0xa4, 0x45, 0x88, 0xcd, 0x65,
	0x97, 0x23, 0x2e, 0x58, 0xa2, 0x0a, 0x81, 0x95, 0xa5, 0xd5, 0x96, 0xc0, 0xb7, 0xfe, 0x3f, 0x80,
	0x2f, 0x42, 0xa3, 0x3d, 0x1e, 0x17, 0xbc, 0x41, 0x83, 0x81, 0x67, 0x76, 0x6a, 0x14, 0xec, 0x06,
	0x36, 0xa4, 0x4f, 0x92, 0x03, 0xe8, 0x57, 0xe5, 0xe0, 0x5c, 0xac, 0x02, 0xc2, 0xc8, 0xd6, 0x87,
	0xf5, 0xd1, 0x4b, 0x97, 0x68, 0x72, 0x0c, 0x44, 0xb0, 0x59, 0xa1, 0x98, 0xc6, 0x68, 0xe7, 0xa6,
	0xb9, 0x52, 0xd8, 0x91, 0x56, 0xc2, 0xb4, 0x5b, 0x47, 0x7d, 0x71, 0x8b, 0x43, 0x4e, 0xe0, 0x91,
	0xc6, 0xd4, 0xd8, 0xf6, 0x29, 0x22, 0xac, 0x62, 0xb6, 0x3b, 0x3f, 0xf1, 0x77, 0x85, 0x5a, 0x47,
	0x46, 0xe9, 0x14, 0x75, 0xa2, 0x87, 0xf2, 0x36, 0x8b, 0xbc, 0x01, 0x72, 0xc1, 0xa8, 0x50, 0xe7,
	0x8c, 0xaa, 0x98, 0xe7, 0x8a, 0x89, 0x2b, 0x9a, 0x55, 0xbd, 0x7a, 0x6f, 0x9d, 0x3e, 0xac, 0x8c,
	0x8e, 0xad, 0x0d, 0xd9, 0x85, 0xfe, 0x35, 0xe5, 0x2a, 0x2e, 0x73, 0xc5, 0xb3, 0x58, 0x30, 0x9a,
	0x2e, 0x74, 0xe7, 0xb6, 0xa3, 0x1e, 0xf2, 0xcf, 0x90, 0x1d, 0x21, 0x37, 0x8c, 0xa1, 0xb7, 0x7c,
	0xb6, 0x64, 0x13, 0xda, 0x3a, 0xc7, 0x29, 0x17, 0xba, 0xb6, 0x82, 0xa8, 0x85, 0xf4, 0x88, 0x0b,
	0xf2, 0x31, 0xb4, 0x8a, 0x52, 0x69, 0x89, 0x81, 0xc4, 0x66, 0x51, 0x2a, 0x14, 0x6c, 0x42, 0x5b,
	0xb1, 0xd9, 0x5c, 0x4b, 0x2c, 0x2a, 0x22, 0x3d, 0xe2, 0x22, 0x14, 0xb0, 0xb1, 0x74, 0xa4, 0x08,
	0x93, 0x29, 0xbb, 0xc2, 0x73, 0x65, 0xc2, 0xd5, 0x9f, 0xc7, 0xc1, 0x96, 0x57, 0xd9, 0x75, 0x6c,
	0x48, 0xbb, 0x4e, 0xa0, 0xb2, 0xeb, 0x53, 0xcd, 0x20, 0x21, 0x6c, 0x18, 0x71, 0x36, 0x89, 0x35,
	0x38, 0x9b, 0xf5, 0x3a, 0x5a, 0x23, 0x9b, 0xfc, 0x92, 0xce, 0x58, 0xf8, 0x67, 0xe8, 0x2d, 0xd7,
	0x00, 0xf9, 0x12, 0x36, 0xd2, 0xe2, 0x3a, 0xcf, 0x0a, 0x9a, 0xc6, 0xb3, 0x22, 0x75, 0xe8, 0xef,
	0xdf, 0xc9, 0x23, 0x2b, 0x7f, 0x5b, 0xa4, 0x2c, 0xea, 0xa6, 0x1e, 0x45, 0x86, 0xf0, 0xe8, 0xbc,
	0xe4, 0x59, 0x1a, 0x53, 0xa1, 0xf8, 0x04, 0x61, 0x2c, 0x2e, 0x45, 0x66, 0x63, 0x7b, 0xa8, 0x45,
	0xaf, 0x9c, 0xe4, 0x4c, 0x64, 0xe1, 0xbf, 0xf1, 0xe6, 0xbe, 0x5d, 0x2b, 0x9f, 0x43, 0x67, 0x2e,
	0xf8, 0x8c, 0x8a, 0x45, 0x9c, 0x56, 0xf0, 0xe3, 0xb7, 0xed, 0xe8, 0x6c, 0x6c, 0x0b, 0x0d, 0xac,
	0xe2, 0xa8, 0x54, 0xe4, 0x0c, 0x7a, 0x49, 0x31, 0x9b, 0xd3, 0x9c, 0x17, 0x39, 0x1a, 0x1a, 0x04,
	0xea, 0xec, 0x0f, 0xbf, 0xa6, 0x52, 0x87, 0x07, 0xce, 0x62, 0x54, 0x2a, 0x79, 0x98, 0x2b, 0xb1,
	0x88, 0x36, 0x12, 0x9f, 0x87, 0x15, 0x92, 0x15, 0x09, 0xcd, 0x62, 0x83, 0x31, 0xde, 0xc9, 0xf5,
	0x34, 0xff, 0xb5, 0x66, 0xe3, 0xd9, 0x1e, 0x40, 0x7f, 0xc6, 0x14, 0x5d, 0x6a, 0x96, 0xc6, 0x4a,
	0xcf, 0xbd, 0x65, 0x8a, 0x7a, 0xad, 0xd2, 0x9b, 0x2d, 0xd1, 0x5b, 0xbf, 0x01, 0xb2, 0x1a, 0x13,
	0xe9, 0x43, 0xfd, 0x92, 0x2d, 0x6c, 0x95, 0xe1, 0x27, 0x79, 0x01, 0xeb, 0x57, 0x34, 0x2b, 0x99,
	0x85, 0xa0, 0xbb, 0xd3, 0x63, 0x54, 0xbe, 0x58, 0xfb, 0x49, 0x2d, 0xfc, 0x03, 0x04, 0x15, 0x1f,
	0x71, 0x51, 0xca, 0x8b, 0xfb, 0x71, 0xf1, 0xf4, 0xf4, 0x8d, 0xc3, 0x45, 0x29, 0x2f, 0xac, 0x11,
	0x96, 0x6e, 0x76, 0x1d, 0x7b, 0xf7, 0x7c, 0x4b, 0x65, 0xd7, 0xba, 0x8c, 0x7e, 0x0b, 0x41, 0x65,
	0x82, 0xe0, 0xac, 0xa8, 0x98, 0x32, 0x65, 0xc3, 0xb5, 0x14, 0xda, 0x5f, 0xb2, 0x85, 0x46, 0x24,
	0x67, 0x7f, 0xc9, 0x16, 0x58, 0x7a, 0xd8, 0x2e, 0x28, 0xba, 0x49, 0x6d, 0xf3, 0x92, 0x2d, 0xb0,
	0x27, 0x7e, 0x01, 0xbd, 0xe5, 0x7c, 0x91, 0xa7, 0xa0, 0x87, 0xe7, 0x78, 0x4e, 0xd5, 0x85, 0x5d,
	0xa0, 0x8d, 0x8c, 0x5f, 0x53, 0x75, 0x81, 0x42, 0xc4, 0xfb, 0x49, 0x46, 0xa7, 0xd5, 0x35, 0x27,
	0xca, 0xfc, 0x08, 0xe9, 0xf0, 0x1d, 0x3c, 0x5c, 0x01, 0x97, 0x6a, 0x70, 0xa9, 0x79, 0x83, 0xcb,
	0x2e, 0x34, 0xf5, 0x04, 0xe6, 0x0a, 0xa8, 0xef, 0xdf, 0xe1, 0x28, 0x88, 0xac, 0x3c, 0x3c, 0x83,
	0x75, 0x33, 0x79, 0x3d, 0x81, 0xa6, 0x60, 0x54, 0x16, 0xb9, 0xdb, 0xb3, 0xa1, 0xc8, 0x8f, 0xa0,
	0x8d, 0x45, 0xa2, 0xc7, 0x98, 0xb5, 0x15, 0x04, 0xd7, 0xb6, 0x27, 0x56, 0x1e, 0x55, 0x9a, 0xe1,
	0x5b, 0xd8, 0x58, 0x12, 0x61, 0x94, 0x3a, 0x6d, 0x36, 0x4a, 0xfc, 0x46, 0x5e, 0xc6, 0x73, 0x93,
	0xca, 0x7a, 0xa4, 0xbf, 0xf1, 0xb2, 0x92, 0x8a, 0x26, 0x97, 0x36, 0x8b, 0x86, 0x08, 0xff, 0x08,
	0xbd, 0xe5, 0xb1, 0x9c, 0x7c, 0x06, 0x4d, 0x33, 0xf9, 0xd9, 0xb3, 0x7f, 0xb8, 0x32, 0xa5, 0x44,
	0x56, 0x81, 0xec, 0x40, 0x43, 0x5e, 0xf2, 0xb9, 0x8d, 0xfe, 0x23, 0xbf, 0x48, 0x2e, 0xf9, 0x3c,
	0xd2, 0xc2, 0xf0, 0xc7, 0x10, 0x8c, 0xf9, 0x8c, 0xe7, 0x53, 0x9c, 0x63, 0x5f, 0x40, 0x43, 0x14,
	0x85, 0xba, 0x63, 0xea, 0x36, 0x3a, 0xa7, 0x8a, 0x4e, 0x59, 0xa4, 0x75, 0x70, 0xf4, 0xe8, 0x78,
	0xdc, 0x3b, 0x8f, 0xe3, 0xa7, 0x00, 0xe6, 0xea, 0xc0, 0x29, 0xc3, 0xc6, 0xb1, 0xb5, 0x02, 0xf2,
	0x63, 0xf7, 0x2c, 0x8a, 0x02, 0xad, 0x8d, 0xb4, 0x79, 0xab, 0xa4, 0xc6, 0xb0, 0xfe, 0x41, 0xc3,
	0x16, 0xcb, 0x53, 0x6d, 0xb6, 0x0f, 0xed, 0xe4, 0x82, 0x67, 0xa9, 0x60, 0xb9, 0x1e, 0x3f, 0xee,
	0xdf, 0x45, 0xa5, 0x17, 0xbe, 0x83, 0x8e, 0xf7, 0xa8, 0x20, 0x43, 0x68, 0xe8, 0x55, 0x6b, 0x1f,
	0x5c, 0x55, 0xeb, 0xe1, 0xc6, 0x15, 0xfb, 0x4a, 0xb9, 0x01, 0x1a, 0xbf, 0xc3, 0xbf, 0x54, 0x73,
	0xd9, 0xcd, 0x83, 0xe3, 0xff, 0x76, 0x7c, 0x73, 0xd4, 0x6b, 0x1f, 0x3a, 0x6a, 0xef, 0xd2, 0xaa,
	0xfb, 0x97, 0x56, 0x58, 0xba, 0xd9, 0xf4, 0x1b, 0x6f, 0xef, 0x39, 0xd8, 0x87, 0x8a, 0x0f, 0x1f,
	0xf6, 0xb1, 0x82, 0x08, 0x52, 0xed, 0xbf, 0xee, 0xed, 0xff, 0xaf, 0xd5, 0xfe, 0x6f, 0x9e, 0x3c,
	0xdf, 0xfe, 0xca, 0xdf, 0x83, 0x75, 0xf3, 0xde, 0x32, 0x05, 0xb2, 0xda, 0xec, 0x46, 0x1c, 0xfe,
	0xa3, 0xe6, 0xb2, 0xe0, 0x1e, 0x50, 0xdf, 0x7e, 0x2c, 0xae, 0xd9, 0xea, 0x5f, 0xd3, 0x6c, 0x08,
	0xde, 0x4a, 0x97, 0xa0, 0x7e, 0x63, 0x36, 0x56, 0xc0, 0xbb, 0xea, 0xc4, 0x28, 0x50, 0xee, 0x33,
	0xdc, 0x86, 0x06, 0xba, 0xc0, 0x87, 0x93, 0x81, 0x26, 0x37, 0x50, 0x38, 0xf2, 0xc5, 0x0e, 0xc0,
	0xcd, 0xb3, 0x8e, 0xb4, 0xa1, 0x31, 0x3e, 0x3c, 0x1d, 0xf7, 0x1f, 0x90, 0x0e, 0xb4, 0x8e, 0x8e,
	0x7f, 0x37, 0x3e, 0x8b, 0x0e, 0xfb, 0xb5, 0x17, 0x3b, 0xd0, 0xf5, 0x6f, 0x7f, 0x12, 0xc0, 0xfa,
	0xeb, 0x57, 0xe3, 0x83, 0x37, 0xfd, 0x07, 0x68, 0x71, 0xf2, 0xea, 0xfd, 0xef, 0xfb, 0xb5, 0xfd,
	0xbf, 0x63, 0x53, 0x33, 0xa9, 0xec, 0x34, 0x43, 0xde, 0x41, 0xd7, 0xff, 0x93, 0x40, 0x9e, 0x79,
	0xc1, 0xde, 0xf1, 0xab, 0x62, 0xeb, 0xf9, 0xbd, 0x72, 0xf3, 0xb4, 0x0f, 0x1f, 0x90, 0x63, 0x68,
	0xbb, 0x41, 0x9f, 0x6c, 0xdd, 0xf1, 0xbb, 0xc0, 0xb9, 0x7a, 0x7a, 0xa7, 0xcc, 0xb9, 0xd9, 0xad,
	0xfd, 0xa0, 0xf6, 0x7a, 0xe7, 0xfd, 0x77, 0x93, 0x0b, 0x51, 0xcc, 0x78, 0x39, 0x2b, 0xe4, 0x1e,
	0xaa, 0xef, 0xe9, 0x89, 0x32, 0xa7, 0x99, 0xf9, 0xe9, 0x92, 0x14, 0xd9, 0x79, 0x53, 0x7f, 0xbd,
	0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xd1, 0x17, 0xc9, 0xc8, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	// ListEntities requests all entities available on the server.
	ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (*ListEntitiesResponse, error)
	// RunTests requests to run tests.
	// A client must send an initial request message containing RunTestsInit to
	// a server. Then a server starts running tests and report progress in
	// streamed response messages.
	RunTests(ctx context.Context, opts ...grpc.CallOption) (TestService_RunTestsClient, error)
}

type testServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestServiceClient(cc *grpc.ClientConn) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (*ListEntitiesResponse, error) {
	out := new(ListEntitiesResponse)
	err := c.cc.Invoke(ctx, "/tast.core.TestService/ListEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceClient) RunTests(ctx context.Context, opts ...grpc.CallOption) (TestService_RunTestsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TestService_serviceDesc.Streams[0], "/tast.core.TestService/RunTests", opts...)
	if err != nil {
		return nil, err
	}
	x := &testServiceRunTestsClient{stream}
	return x, nil
}

type TestService_RunTestsClient interface {
	Send(*RunTestsRequest) error
	Recv() (*RunTestsResponse, error)
	grpc.ClientStream
}

type testServiceRunTestsClient struct {
	grpc.ClientStream
}

func (x *testServiceRunTestsClient) Send(m *RunTestsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *testServiceRunTestsClient) Recv() (*RunTestsResponse, error) {
	m := new(RunTestsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	// ListEntities requests all entities available on the server.
	ListEntities(context.Context, *ListEntitiesRequest) (*ListEntitiesResponse, error)
	// RunTests requests to run tests.
	// A client must send an initial request message containing RunTestsInit to
	// a server. Then a server starts running tests and report progress in
	// streamed response messages.
	RunTests(TestService_RunTestsServer) error
}

// UnimplementedTestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestServiceServer struct {
}

func (*UnimplementedTestServiceServer) ListEntities(ctx context.Context, req *ListEntitiesRequest) (*ListEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEntities not implemented")
}
func (*UnimplementedTestServiceServer) RunTests(srv TestService_RunTestsServer) error {
	return status.Errorf(codes.Unimplemented, "method RunTests not implemented")
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_ListEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).ListEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tast.core.TestService/ListEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).ListEntities(ctx, req.(*ListEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestService_RunTests_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TestServiceServer).RunTests(&testServiceRunTestsServer{stream})
}

type TestService_RunTestsServer interface {
	Send(*RunTestsResponse) error
	Recv() (*RunTestsRequest, error)
	grpc.ServerStream
}

type testServiceRunTestsServer struct {
	grpc.ServerStream
}

func (x *testServiceRunTestsServer) Send(m *RunTestsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *testServiceRunTestsServer) Recv() (*RunTestsRequest, error) {
	m := new(RunTestsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tast.core.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListEntities",
			Handler:    _TestService_ListEntities_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunTests",
			Handler:       _TestService_RunTests_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "testing.proto",
}
