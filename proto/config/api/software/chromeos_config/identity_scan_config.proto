syntax = "proto3";

package chromiumos.config.api.software.chromeos_config;

option go_package = "go.chromium.org/chromiumos/config/go/api/software/chromeos_config";

// Defines how devices are probed at runtime to dynamically
// determine the correct configuration payload.
message IdentityScanConfig {
  // Scan config to identify a unique DesignConfigId, which determines
  // which SoftwareConfig will be used.
  message DesignConfigId {
    oneof firmware_name_match {
      // x86 only. Firmware name built into the firmware and reflected back
      // out in the SMBIOS tables.
      string smbios_name_match = 1;
      // ARM only. String pattern (partial) that is matched against the
      // contents of /proc/device-tree/compatible on ARM devices.
      string device_tree_compatible_match = 2;
    }

    // SKU configured during board manufacturing. Should match the value
    // returned by "cros_config /identity sku-id" (which abstracts how SKU is
    // encoded on the specific platform). Must be in the range [0, 0x7FFFFFFF].
    uint32 firmware_sku = 3;
  }

  // Scanning config based on: config/api/deivce_brand_id.proto
  message BrandId {
    // 'whitelabel_tag' value set in the VPD.
    // See
    // https://chromeos.google.com/partner/dlm/docs/factory/vpd.html#field-whitelabel_tag.
    string whitelabel_tag = 1;
  }
}
