// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/device_brand.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Defines device branding characteristics for each unique Chromium OS device
// brand.
type DeviceBrand struct {
	// Globally unique device brand identifier.
	Id *DeviceBrandId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Hardware design used for the given brand.
	DesignId *DesignId `protobuf:"bytes,2,opt,name=design_id,json=designId,proto3" json:"design_id,omitempty"`
	// OEM for the given device brand.
	OemId *PartnerId `protobuf:"bytes,3,opt,name=oem_id,json=oemId,proto3" json:"oem_id,omitempty"`
	// Brand code assigned and set during manufacturing.
	BrandCode string `protobuf:"bytes,4,opt,name=brand_code,json=brandCode,proto3" json:"brand_code,omitempty"`
	// Brand marketing name.
	BrandName            string   `protobuf:"bytes,5,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceBrand) Reset()         { *m = DeviceBrand{} }
func (m *DeviceBrand) String() string { return proto.CompactTextString(m) }
func (*DeviceBrand) ProtoMessage()    {}
func (*DeviceBrand) Descriptor() ([]byte, []int) {
	return fileDescriptor_14bbf94e7b7d4955, []int{0}
}

func (m *DeviceBrand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceBrand.Unmarshal(m, b)
}
func (m *DeviceBrand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceBrand.Marshal(b, m, deterministic)
}
func (m *DeviceBrand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceBrand.Merge(m, src)
}
func (m *DeviceBrand) XXX_Size() int {
	return xxx_messageInfo_DeviceBrand.Size(m)
}
func (m *DeviceBrand) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceBrand.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceBrand proto.InternalMessageInfo

func (m *DeviceBrand) GetId() *DeviceBrandId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceBrand) GetDesignId() *DesignId {
	if m != nil {
		return m.DesignId
	}
	return nil
}

func (m *DeviceBrand) GetOemId() *PartnerId {
	if m != nil {
		return m.OemId
	}
	return nil
}

func (m *DeviceBrand) GetBrandCode() string {
	if m != nil {
		return m.BrandCode
	}
	return ""
}

func (m *DeviceBrand) GetBrandName() string {
	if m != nil {
		return m.BrandName
	}
	return ""
}

type DeviceBrandList struct {
	Value                []*DeviceBrand `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeviceBrandList) Reset()         { *m = DeviceBrandList{} }
func (m *DeviceBrandList) String() string { return proto.CompactTextString(m) }
func (*DeviceBrandList) ProtoMessage()    {}
func (*DeviceBrandList) Descriptor() ([]byte, []int) {
	return fileDescriptor_14bbf94e7b7d4955, []int{1}
}

func (m *DeviceBrandList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceBrandList.Unmarshal(m, b)
}
func (m *DeviceBrandList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceBrandList.Marshal(b, m, deterministic)
}
func (m *DeviceBrandList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceBrandList.Merge(m, src)
}
func (m *DeviceBrandList) XXX_Size() int {
	return xxx_messageInfo_DeviceBrandList.Size(m)
}
func (m *DeviceBrandList) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceBrandList.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceBrandList proto.InternalMessageInfo

func (m *DeviceBrandList) GetValue() []*DeviceBrand {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*DeviceBrand)(nil), "chromiumos.config.api.DeviceBrand")
	proto.RegisterType((*DeviceBrandList)(nil), "chromiumos.config.api.DeviceBrandList")
}

func init() { proto.RegisterFile("api/device_brand.proto", fileDescriptor_14bbf94e7b7d4955) }

var fileDescriptor_14bbf94e7b7d4955 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcb, 0x4b, 0xc3, 0x40,
	0x10, 0x87, 0x49, 0x6b, 0x8a, 0xd9, 0x1c, 0x84, 0xf5, 0x41, 0x2c, 0x88, 0x21, 0x78, 0x08, 0x1e,
	0x36, 0x50, 0x05, 0x3d, 0x78, 0xaa, 0x5e, 0x82, 0x22, 0x92, 0xa3, 0x97, 0xb2, 0xcd, 0xac, 0x71,
	0xc0, 0xcd, 0x84, 0x4d, 0xda, 0xbf, 0xdd, 0xa3, 0x24, 0x5b, 0x92, 0x20, 0x16, 0x6f, 0xcb, 0xfc,
	0xbe, 0x6f, 0xe7, 0xc1, 0xce, 0x64, 0x85, 0x09, 0xa8, 0x2d, 0xe6, 0x6a, 0xb5, 0x36, 0xb2, 0x04,
	0x51, 0x19, 0x6a, 0x88, 0x9f, 0xe6, 0x9f, 0x86, 0x34, 0x6e, 0x34, 0xd5, 0x22, 0xa7, 0xf2, 0x03,
	0x0b, 0x21, 0x2b, 0x9c, 0x1f, 0x5b, 0xbc, 0xc6, 0xa2, 0x5c, 0xe1, 0x8e, 0x9d, 0x9f, 0xff, 0xfe,
	0x63, 0x88, 0x4e, 0xda, 0xa8, 0x92, 0xa6, 0x29, 0x95, 0xe9, 0xab, 0xd1, 0xb7, 0xc3, 0xfc, 0xa7,
	0x8e, 0x5f, 0xb6, 0x38, 0xbf, 0x65, 0x13, 0x84, 0xc0, 0x09, 0x9d, 0xd8, 0x5f, 0x5c, 0x89, 0x3f,
	0x3b, 0x8b, 0x11, 0x9f, 0x42, 0x36, 0x41, 0xe0, 0x0f, 0xcc, 0xeb, 0x27, 0x09, 0x26, 0x9d, 0x7c,
	0xb9, 0x57, 0x6e, 0xb9, 0x14, 0xb2, 0x43, 0xd8, 0xbd, 0xf8, 0x1d, 0x9b, 0x91, 0xd2, 0xad, 0x3a,
	0xed, 0xd4, 0x70, 0x8f, 0xfa, 0x66, 0x87, 0x4f, 0x21, 0x73, 0x49, 0xe9, 0x14, 0xf8, 0x05, 0x63,
	0x76, 0xc9, 0x9c, 0x40, 0x05, 0x07, 0xa1, 0x13, 0x7b, 0x99, 0xd7, 0x55, 0x1e, 0x09, 0xd4, 0x10,
	0x97, 0x52, 0xab, 0xc0, 0x1d, 0xc5, 0xaf, 0x52, 0xab, 0xe8, 0x99, 0x1d, 0x8d, 0x36, 0x79, 0xc1,
	0xba, 0xe1, 0xf7, 0xcc, 0xdd, 0xca, 0xaf, 0x8d, 0x0a, 0x9c, 0x70, 0x1a, 0xfb, 0x8b, 0xe8, 0xff,
	0x03, 0x64, 0x56, 0x58, 0x5e, 0xbf, 0xc7, 0x05, 0xf5, 0xb8, 0x20, 0x53, 0x24, 0x83, 0x9b, 0x58,
	0x37, 0x29, 0x28, 0x91, 0x15, 0xae, 0x67, 0xdd, 0xe9, 0x6f, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x30, 0x47, 0x5c, 0xe9, 0xf1, 0x01, 0x00, 0x00,
}
